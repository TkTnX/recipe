generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id   Int    @id @default(autoincrement())
  name String
  href String
  img  String
}

model User {
  id             String   @id @default(uuid())
  supabaseAuthId String   @unique
  username       String
  email          String   @unique
  password       String
  avatarUrl      String?
  bio            String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Отношения
  recipes  Recipe[]
  comments RecipeComment[]
  // articles    Article[]      
  // favorites   Favorite[]     
}

model Recipe {
  id          String @id @default(uuid())
  title       String
  description String
  imageUrl    String

  calories    Int
  proteins    Float
  fats        Float
  carbs       Float
  cookingTime Int
  difficulty  Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  author      User            @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId    String
  ingredients Ingredient[]
  steps       RecipeStep[]
  comments    RecipeComment[]
}

model Ingredient {
  id       String @id @default(uuid())
  name     String
  quantity String

  recipe   Recipe @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  recipeId String
}

model RecipeStep {
  id          String  @id @default(uuid())
  stepNumber  Int
  description String
  imageUrl    String?

  recipe   Recipe @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  recipeId String
}

model RecipeComment {
  id        String   @id @default(uuid())
  comment   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  author   User   @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId String
  recipe   Recipe @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  recipeId String
}
